// Generated by delombok at Wed Aug 05 13:49:19 CEST 2015
package pl.touk.sputnik.engine.visitor;

import org.jetbrains.annotations.NotNull;
import pl.touk.sputnik.review.Review;

public class SummaryMessageVisitor implements AfterReviewVisitor {
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(SummaryMessageVisitor.class);
    
    /**
     * The message we display when there no problems have been found.
     */
    private final String perfectMessage;

    @Override
    public void afterReview(@NotNull Review review) {
        addSummaryMessage(review);
        addProblemMessages(review);
    }

    private void addSummaryMessage(Review review) {
        String summaryMessage = getSummaryMessage(review);
        log.info("Adding summary message to review: {}", summaryMessage);
        review.getMessages().add(summaryMessage);
    }

    private String getSummaryMessage(@NotNull Review review) {
        if (review.getTotalViolationCount() == 0) {
            return perfectMessage;
        }
        return String.format("Total %d violations found", review.getTotalViolationCount());
    }

    private void addProblemMessages(@NotNull Review review) {
        for (String problemMessage : review.getProblems()) {
            log.info("Adding problem message to review: {}", problemMessage);
            review.getMessages().add(problemMessage);
        }
    }

    @java.beans.ConstructorProperties({"perfectMessage"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public SummaryMessageVisitor(final String perfectMessage) {
        this.perfectMessage = perfectMessage;
    }
}