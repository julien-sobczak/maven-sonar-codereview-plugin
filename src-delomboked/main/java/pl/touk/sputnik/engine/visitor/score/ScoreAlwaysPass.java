// Generated by delombok at Wed Aug 05 13:49:19 CEST 2015
package pl.touk.sputnik.engine.visitor.score;

import org.jetbrains.annotations.NotNull;
import pl.touk.sputnik.engine.visitor.AfterReviewVisitor;
import pl.touk.sputnik.review.Review;
import java.util.Map;

public class ScoreAlwaysPass implements AfterReviewVisitor {
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(ScoreAlwaysPass.class);
    private final Map<String, Short> passingScore;

    @Override
    public void afterReview(@NotNull Review review) {
        log.info("Adding static passing score {} to review", passingScore);
        review.getScores().putAll(passingScore);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Map<String, Short> getPassingScore() {
        return this.passingScore;
    }

    @java.beans.ConstructorProperties({"passingScore"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public ScoreAlwaysPass(final Map<String, Short> passingScore) {
        this.passingScore = passingScore;
    }
}