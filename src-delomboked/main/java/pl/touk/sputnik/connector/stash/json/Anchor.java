// Generated by delombok at Wed Aug 05 13:49:19 CEST 2015
package pl.touk.sputnik.connector.stash.json;
/*
{
             "line": 1,
             "lineType": "CONTEXT",
             "fileType": "FROM"
             "path": "path/to/file",
             "srcPath": "path/to/file"
         }
 */

public class Anchor {
    public int line;
    public String lineType = "CONTEXT";
    public String fileType = "TO";
    public String path;
    public String srcPath;

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    Anchor(final int line, final String lineType, final String fileType, final String path, final String srcPath) {
        this.line = line;
        this.lineType = lineType;
        this.fileType = fileType;
        this.path = path;
        this.srcPath = srcPath;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class AnchorBuilder {
        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private int line;
        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String lineType;
        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String fileType;
        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String path;
        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String srcPath;

        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        AnchorBuilder() {
        }

        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public AnchorBuilder line(final int line) {
            this.line = line;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public AnchorBuilder lineType(final String lineType) {
            this.lineType = lineType;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public AnchorBuilder fileType(final String fileType) {
            this.fileType = fileType;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public AnchorBuilder path(final String path) {
            this.path = path;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public AnchorBuilder srcPath(final String srcPath) {
            this.srcPath = srcPath;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public Anchor build() {
            return new Anchor(line, lineType, fileType, path, srcPath);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public java.lang.String toString() {
            return "Anchor.AnchorBuilder(line=" + this.line + ", lineType=" + this.lineType + ", fileType=" + this.fileType + ", path=" + this.path + ", srcPath=" + this.srcPath + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static AnchorBuilder builder() {
        return new AnchorBuilder();
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int getLine() {
        return this.line;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getLineType() {
        return this.lineType;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getFileType() {
        return this.fileType;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getPath() {
        return this.path;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getSrcPath() {
        return this.srcPath;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setLine(final int line) {
        this.line = line;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setLineType(final String lineType) {
        this.lineType = lineType;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setFileType(final String fileType) {
        this.fileType = fileType;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setPath(final String path) {
        this.path = path;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setSrcPath(final String srcPath) {
        this.srcPath = srcPath;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Anchor)) return false;
        final Anchor other = (Anchor)o;
        if (!other.canEqual((java.lang.Object)this)) return false;
        if (this.getLine() != other.getLine()) return false;
        final java.lang.Object this$lineType = this.getLineType();
        final java.lang.Object other$lineType = other.getLineType();
        if (this$lineType == null ? other$lineType != null : !this$lineType.equals(other$lineType)) return false;
        final java.lang.Object this$fileType = this.getFileType();
        final java.lang.Object other$fileType = other.getFileType();
        if (this$fileType == null ? other$fileType != null : !this$fileType.equals(other$fileType)) return false;
        final java.lang.Object this$path = this.getPath();
        final java.lang.Object other$path = other.getPath();
        if (this$path == null ? other$path != null : !this$path.equals(other$path)) return false;
        final java.lang.Object this$srcPath = this.getSrcPath();
        final java.lang.Object other$srcPath = other.getSrcPath();
        if (this$srcPath == null ? other$srcPath != null : !this$srcPath.equals(other$srcPath)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Anchor;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getLine();
        final java.lang.Object $lineType = this.getLineType();
        result = result * PRIME + ($lineType == null ? 0 : $lineType.hashCode());
        final java.lang.Object $fileType = this.getFileType();
        result = result * PRIME + ($fileType == null ? 0 : $fileType.hashCode());
        final java.lang.Object $path = this.getPath();
        result = result * PRIME + ($path == null ? 0 : $path.hashCode());
        final java.lang.Object $srcPath = this.getSrcPath();
        result = result * PRIME + ($srcPath == null ? 0 : $srcPath.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
        return "Anchor(line=" + this.getLine() + ", lineType=" + this.getLineType() + ", fileType=" + this.getFileType() + ", path=" + this.getPath() + ", srcPath=" + this.getSrcPath() + ")";
    }
}